programa -> program-heading ; program-block

program-heading -> program identifier opt-program-parameters
opt-program-parameters -> ''
opt-program-parameters -> ( program-parameters )

program-parameters -> identifier-list

program-block -> body

body -> constant-declaration-part variable-declaration-part procedure-and-function-declaration-part statement-part

constant-declaration-part -> ''
constant-declaration-part -> constant constant-definition ; more-constant-definition
more-constant-definition -> ''
more-constant-definition -> constant-definition ; more-constant-definition

variable-declaration-part -> ''
variable-declaration-part -> var variable-declaration ; more-variable-declaration
more-variable-declaration -> ''
more-variable-declaration -> variable-declaration ; more-variable-declaration
variable-declaration -> identifier-list : type

procedure-and-function-declaration-part -> ''
procedure-and-function-declaration-part -> procedure-function more-procedure-and-function-declaration-part
procedure-function -> procedure-declaration ;
procedure-function -> function-declaration ;

procedure-declaration -> procedure-heading ; procedure-body
procedure-heading -> procedure identifier opt-formal-parameter-list
procedure-body -> body

opt-formal-parameter-list -> ''
opt-formal-parameter-list -> ( formal-parameter-section more-formal-parameter-section ) )
more-formal-parameter-section -> ''
more-formal-parameter-section -> ; formal-parameter-section more-formal-parameter-section

formal-parameter-section -> value-parameter-section
formal-parameter-section -> variable-parameter-section

function-declaration -> function-heading ; function-body
function-heading -> function identifier opt-formal-parameter-list : type
function-body -> body

value-parameter-section -> identifier-list : type
variable-parameter-section -> var identifier-list : type


statement-part -> begin statement-sequence end .

type -> integer
actual-parameter -> 
actual-parameter -> 
type -> real
type -> boolean
type -> string

identifier-list -> identifier more-identifier
more-identifier -> ''
more-identifier -> , identifier more-identifier

statement-sequence -> statement more-statement
more-statement -> ''
more-statement -> ; statement more-statement

statement -> simple-statement
statement -> structured-statement

simple-statement -> ''
simple-statement -> assignment-statement
simple-statement -> procedure-statement
simple-statement -> IO-statement

assignment-statement -> identifier := expression
procedure-statement -> identifier opt-actual-parameter-list

opt-actual-parameter-list -> ( actual-parameter more-actual-parameter )
more-actual-parameter -> ''
more-actual-parameter -> , actual-parameter

actual-parameter -> expression
actual-parameter -> identifier

IO-statement -> writeln-statement
IO-statement -> readln-statement

writeln-statement -> writeln ( opt-element-list )

opt-element-list -> ''
opt-element-list -> element-list

element-list -> element more-element
more-element -> ''
more-element -> , element more-element

element -> number
element -> string
element -> constant
element -> identifier

readln-statement -> readln opt-identifier-list
opt-identifier-list -> ''
opt-identifier-list -> ( identifier-list )